name: Deploy to VPS

on:
  push:
    branches:
      - main  # Sadece 'main' dalına yapılan push'larda çalışır.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Kodu Checkout Et
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JBR-17 (JetBrains Runtime 17) Kurulumu
      - name: Set up JBR 17
        run: |
          wget https://github.com/JetBrains/JetBrainsRuntime/releases/download/jbr-17.0.4.1/JBR-17.0.4.1-linux-x64-b2500.tar.gz
          tar -xzf JBR-17.0.4.1-linux-x64-b2500.tar.gz
          sudo mv jbr-17.0.4.1-linux-x64 /opt/jbr
          sudo update-alternatives --install /usr/bin/java java /opt/jbr/bin/java 1
          sudo update-alternatives --set java /opt/jbr/bin/java

      # 3. Gradle'ı kur
      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v2
        with:
          gradle-version: '8.0.1'  # İhtiyacınıza göre Gradle versiyonunu seçebilirsiniz

      # 4. Gradle wrapper dosyasına çalıştırılabilir izin ver
      - name: Give execute permissions to gradlew
        run: chmod +x ./gradlew

      # 5. Gradle ile build al
      - name: Build with Gradle
        run: ./gradlew clean build  # Bu komut ile .jar dosyasını build ediyoruz

      # 6. SSH Kurulumu
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_IP: ${{ secrets.VPS_IP }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${VPS_IP} >> ~/.ssh/known_hosts
          echo "StrictHostKeyChecking=no" >> ~/.ssh/config

      # 7. .jar dosyasını VPS'ye kopyala
      - name: Copy .jar file to VPS
        run: scp -o StrictHostKeyChecking=no build/libs/*.jar ${VPS_USER}@${VPS_IP}:/root/projects/wowdiscordbot/test

      # 8. VPS üzerinde eski container'ı durdur
      - name: Stop existing application on VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${VPS_USER}@${VPS_IP} << 'EOF'
            # Daha önce çalışıyorsa eski süreci sonlandır
            pkill -f 'java -jar' || true
            echo "Eski süreç sonlandırıldı."
          EOF

      # 9. VPS üzerinde uygulamayı başlat
      - name: Run .jar on VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${VPS_USER}@${VPS_IP} << 'EOF'
            # Yeni .jar dosyasını çalıştır
            java -jar /root/projects/wowdiscordbot/test/*.jar &
            echo "Uygulama başarıyla başlatıldı!"
          EOF

      # 10. Başarılı Deployment İle İlgili Mesaj
      - name: Success Message
        run: echo "Deployment başarıyla tamamlandı!"
