name: Deploy to VPS

on:
  push:
    branches:
      - main  # Sadece 'main' dalına yapılan push'larda çalışır.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Kodu Checkout Et
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Gradle'ı kur
      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v2
        with:
          gradle-version: '8.0.1'  # İhtiyacınıza göre Gradle versiyonunu seçebilirsiniz

      # 3. Gradle ile build al
      - name: Build with Gradle
        run: ./gradlew clean build  # Bu komut ile .jar dosyasını build ediyoruz

      # 4. SSH Kurulumu
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_IP: ${{ secrets.VPS_IP }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${VPS_IP} >> ~/.ssh/known_hosts
          echo "StrictHostKeyChecking=no" >> ~/.ssh/config

      # 5. .jar dosyasını VPS'ye kopyala
      - name: Copy .jar file to VPS
        run: scp -o StrictHostKeyChecking=no build/libs/*.jar ${VPS_USER}@${VPS_IP}:/root/projects/wowdiscordbot/test

      # 6. VPS üzerinde uygulamayı çalıştır
      - name: Run .jar on VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${VPS_USER}@${VPS_IP} << 'EOF'
            # Daha önce çalışıyorsa eski süreci sonlandır
            pkill -f 'java -jar' || true

            # Yeni .jar dosyasını çalıştır
            java -jar /root/projects/wowdiscordbot/*.jar &
            echo "Uygulama başarıyla başlatıldı!"
          EOF
